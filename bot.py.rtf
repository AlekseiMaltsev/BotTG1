{\rtf1\ansi\ansicpg1251\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red39\green129\blue201;\red12\green12\blue12;\red255\green255\blue255;
\red255\green255\blue255;\red20\green152\blue106;\red235\green16\blue47;\red212\green20\blue102;}
{\*\expandedcolortbl;;\cssrgb\c18039\c58431\c82745;\cssrgb\c5098\c5098\c5098;\cssrgb\c100000\c100000\c100000;
\cssrgb\c100000\c100000\c100000\c50196;\cssrgb\c0\c65098\c49020;\cssrgb\c94902\c17255\c23922;\cssrgb\c87451\c18824\c47451;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 from\cf4 \strokec4  telegram.ext \cf2 \strokec2 import\cf4 \strokec4  Updater, CommandHandler, MessageHandler, Filters\
\cf2 \strokec2 import\cf4 \strokec4  openai\
\
\pard\pardeftab720\partightenfactor0
\cf5 \strokec5 # \uc0\u1047 \u1072 \u1084 \u1077 \u1085 \u1080 \u1090 \u1077  'YOUR_TELEGRAM_TOKEN' \u1085 \u1072  \u1074 \u1072 \u1096  \u1090 \u1086 \u1082 \u1077 \u1085  \u1086 \u1090  BotFather\cf4 \strokec4 \
TELEGRAM_TOKEN = \cf6 \strokec6 'YOUR_TELEGRAM_TOKEN'\cf4 \strokec4 \
\cf5 \strokec5 # \uc0\u1047 \u1072 \u1084 \u1077 \u1085 \u1080 \u1090 \u1077  'YOUR_OPENAI_API_KEY' \u1085 \u1072  \u1074 \u1072 \u1096  API \u1082 \u1083 \u1102 \u1095  \u1086 \u1090  OpenAI\cf4 \strokec4 \
OPENAI_API_KEY = \cf6 \strokec6 'YOUR_OPENAI_API_KEY'\cf4 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \strokec2 def\cf4 \strokec4  \cf7 \strokec7 start\cf4 \strokec4 (update, context):\
    update.message.reply_text(\cf6 \strokec6 '\uc0\u1055 \u1088 \u1080 \u1074 \u1077 \u1090 ! \u1054 \u1090 \u1087 \u1088 \u1072 \u1074 \u1100 \u1090 \u1077  \u1084 \u1085 \u1077  \u1095 \u1090 \u1086 -\u1085 \u1080 \u1073 \u1091 \u1076 \u1100 , \u1080  \u1103  \u1086 \u1090 \u1074 \u1077 \u1095 \u1091  \u1089  \u1087 \u1086 \u1084 \u1086 \u1097 \u1100 \u1102  GPT.'\cf4 \strokec4 )\
\
\cf2 \strokec2 def\cf4 \strokec4  \cf7 \strokec7 handle_message\cf4 \strokec4 (update, context):\
    openai.api_key = OPENAI_API_KEY\
\
    response = openai.Completion.create(\
        engine=\cf6 \strokec6 "davinci"\cf4 \strokec4 ,\
        prompt=update.message.text,\
        max_tokens=\cf8 \strokec8 150\cf4 \strokec4 \
    )\
\
    update.message.reply_text(response.choices[\cf8 \strokec8 0\cf4 \strokec4 ].text.strip())\
\
\cf2 \strokec2 def\cf4 \strokec4  \cf7 \strokec7 main\cf4 \strokec4 ():\
    updater = Updater(TELEGRAM_TOKEN, use_context=\cf2 \strokec2 True\cf4 \strokec4 )\
\
    dp = updater.dispatcher\
\
    dp.add_handler(CommandHandler(\cf6 \strokec6 "start"\cf4 \strokec4 , start))\
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_message))\
\
    updater.start_polling()\
    updater.idle()\
\
\cf2 \strokec2 if\cf4 \strokec4  __name__ == \cf6 \strokec6 '__main__'\cf4 \strokec4 :\
    main()}